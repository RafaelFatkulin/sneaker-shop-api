// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     Role   @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Product {
  id         Int      @id @default(autoincrement())
  title      String
  brand      Brand    @relation(fields: [brandId], references: [id])
  brandId    Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int

  productOptions ProductOptions[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("products")
}

model Category {
  id    Int    @id @default(autoincrement())
  title String @unique

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("categories")
}

model Brand {
  id          Int    @id @default(autoincrement())
  title       String @unique
  logo        String
  description String

  products Product[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("brands")
}

model Size {
  id    Int    @id @default(autoincrement())
  title String @unique

  productOptions ProductOptions[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("sizes")
}

model Color {
  id    Int    @id @default(autoincrement())
  title String @unique
  code  String

  productOptions ProductOptions[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("colors")
}

enum DiscountType {
  PERCENT
  FIXED
}

model ProductOptions {
  id Int @id @default(autoincrement())

  product   Product @relation(fields: [productId], references: [id])
  productId Int

  size   Size @relation(fields: [sizeId], references: [id])
  sizeId Int

  color   Color @relation(fields: [colorId], references: [id])
  colorId Int

  images Json?

  price        Decimal
  discount     Decimal?
  discountType DiscountType?

  count Int? @default(0)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("product_options")
}
